<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_0861_peer_review.UserScore</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Implementation class for the User Score table in the Peer Review application.</description>
        <name>UserScore</name>
        <script><![CDATA[var UserScore = Class.create();
UserScore.prototype = Object.extendsObject(x_1234_peer_review.Base, {
	initialize: function() {
	},
	
	calculate : calculate,
	recalculateAndSave : recalculateAndSave,
	saveFromFeedback: saveFromFeedback,
	saveUserScore : saveUserScore,
	type: 'UserScore'
});

function calculate (receiverID){
	if (!receiverID) {
		return;
	}
	
	var feedbackTable = this.CONSTANTS.tables.feedback;
	var queryObject = {
		"receiver" : receiverID,
		"state" : 'complete'
	};
	var totalRecords  = this.getAggregate(feedbackTable,queryObject,"COUNT");
	var promoterCount = this.getAggregate(feedbackTable,queryObject,"COUNT",false,false,"scoreBETWEEN9@10");
	var detractorCount = this.getAggregate(feedbackTable,queryObject,"COUNT",false,false,"scoreBETWEEN0@6");
	var nps = (((promoterCount/totalRecords) - (detractorCount/totalRecords)) * 100).toFixed(2);
	var avg = this.getAggregate(feedbackTable, queryObject, "AVG", "score", "receiver");
	
	return {
		nps : nps,
		avg : avg
	};
}

function recalculateAndSave(receiverID) {
	if (!receiverID) {
		receiverID = gs.getUserID();
	}
	
	var calc = this.calculate(receiverID);
	this.saveUserScore(receiverID, calc.avg, calc.nps);
}

function saveFromFeedback(current) {
	var receiverID = current.receiver.sys_id.toString();
	var feedbackTable = current.getTableName();
	var queryObject = {
		"receiver" : receiverID
	};
	var calc = this.calculate(receiverID);
	this.saveUserScore(receiverID, calc.avg, calc.nps);
}

function saveUserScore(receiverID, avg, nps) {
	this.upsertRecord(this.CONSTANTS.tables.user_score, {
		"user" : receiverID
	},{
		"user" : receiverID,
		"average" : avg,
		"nps" : nps
	});
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-04-05 06:05:20</sys_created_on>
        <sys_id>371c19af2fee01101cb52f2ef699b62a</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>UserScore</sys_name>
        <sys_package display_value="Peer Review" source="x_0861_peer_review">a13922132fa601101cb52f2ef699b616</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Peer Review">a13922132fa601101cb52f2ef699b616</sys_scope>
        <sys_update_name>sys_script_include_371c19af2fee01101cb52f2ef699b62a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-04-05 06:05:20</sys_updated_on>
    </sys_script_include>
</record_update>
